<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- Add support for component scanning -->
	<context:component-scan base-package="com.ajay" />

    <!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>

	<!-- Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
	
	<!-- Spring default form for login Start-->
	
	<!-- <sec:http auto-config="true">
		<sec:intercept-url pattern="/security/**" access="ROLE_USER"/>
	</sec:http>
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="admin" password="admin" authorities="ROLE_USER"/>
			</sec:user-service>
			<sec:password-encoder ref="passwordEncoder"></sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager> -->
	<!-- For hashing and salting user passwords -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/> -->
    
    <!-- Spring default form for login End-->
    
    <!-- Spring custom login form for Start-->
    <!-- default-target-url="/admin"  This will contain successful page-->
    <sec:http auto-config="true">
		<sec:intercept-url pattern="/security/showPage**" access="ROLE_USER" />
		<sec:access-denied-handler error-page="/403"/>
		<sec:form-login
		    login-page="/login"
		    default-target-url="/admin"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password"/>
		<sec:logout logout-success-url="/login?logout" />
		<sec:remember-me token-validity-seconds="1209600"/>
		
	</sec:http>
	
	<!-- Authentication using in memory --> 
	
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="admin" password="admin" authorities="ROLE_USER"/>
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	 <!-- Spring custom login form for End-->
	 
	 <!--Authentication using Jdbc  -->
	<!-- <sec:authentication-manager>
	  <sec:authentication-provider>
		<sec:jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </sec:authentication-provider>
	</sec:authentication-manager> -->
	
</beans>











